// This file has been autogenerated from a class added in the UI designer.

using System;
using Foundation;
using System.Collections.Generic;
using UIKit;
using CoreFoundation;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.IO;
using Xamarin_Sample_App.Home;

namespace Xamarin_Sample_App
{
	public partial class ProductDetailViewController : UIViewController
	{
        public Product product { get; set; }
        List<Product> products = new List<Product>();
        AppDelegate appDelegate = (AppDelegate)UIApplication.SharedApplication.Delegate;

        public ProductDetailViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            UpdateProductDetails();
            HideKeyboard();
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);
            SetBadge();
        }

        partial void AddToCartTap(NSObject sender)
        {
            AddToCart();
            SetBadge();
            ShowAlert();
        }

        private void AddToCart()
        {
            var itemExist = IsItemExist();
            if (itemExist)
            {
                ShowExistAlert();
                AddToCartButton.Enabled = false;
            }
            else
            {
                AddItem();    
            }
        }

        private void AddItem()
        {
            var appDelegate = (AppDelegate)UIApplication.SharedApplication.Delegate;
            appDelegate.cartList.Add(product);
        }

        private void HideKeyboard()
        {
            // Dismiss the keyboard if taps anywhere in the view.
            var gesture = new UITapGestureRecognizer(() =>
              View.EndEditing(true));
            View.AddGestureRecognizer(gesture);   
        }

        private void UpdateProductDetails()
        {
            productDetailTitle.Text = product.name;
            productDetailPrice.Text = "$ " + product.price;
            AddImage();
        }

        private void AddImage()
        {
            string imageUrl = product.image;
            downloadImage(imageUrl);
        }

        private async void downloadImage(string imageUrl)
        {
            NSUrlSession session = NSUrlSession.SharedSession;
            var downloadTask = await session.CreateDataTaskAsync(NSUrl.FromString(imageUrl));
            //Begin downloading asynchronously
            if (downloadTask != null)
            {
                NSData data = downloadTask.Data;
                DispatchQueue.MainQueue.DispatchAsync(() =>
                {
                    productDetailImage.Image = UIImage.LoadFromData(data);
                });
            }
        }

        private void SetBadge()
        {
            var count = appDelegate.cartList.Count;
            var tabItems = TabBarController.TabBar.Items;
            {
                var tabItem = tabItems[1];
                if (count > 0)
                    tabItem.BadgeValue = count.ToString();
                else
                    tabItem.BadgeValue = null;
            }
        }

        private bool IsItemExist()
        {
            var items = appDelegate.cartList;
            var check = false;
            foreach(var item in items)
            {
                if(item.name == productDetailTitle.Text)
                {
                    check = true;
                }
            }
            return check;
        }

        private void ShowAlert()
        {
            var alert = UIAlertController.Create("Added", "Your Item has been added to Cart", UIAlertControllerStyle.Alert);
            alert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));
            PresentViewController(alert, true, null);
        }

        private void ShowExistAlert()
        {
            var alert = UIAlertController.Create("Already Added", "Item has been already added to Cart", UIAlertControllerStyle.Alert);
            alert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));
            PresentViewController(alert, true, null);
        }
    }
}
