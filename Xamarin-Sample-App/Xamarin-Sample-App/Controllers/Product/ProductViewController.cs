// This file has been autogenerated from a class added in the UI designer.
using System;
using Foundation;
using UIKit;
using System.Collections.Generic;
using Xamarin_Sample_App.Home;
using System.Linq;
using KountDataCollector;
using Xamarin_Sample_App.Controllers.Product;

namespace Xamarin_Sample_App
{
    
    public partial class ProductViewController : UIViewController
	{
		public string category { set; get; }
        List<Product> productList = new List<Product>();
        List<Product> filteredData = new List<Product>();
        List<Product> products = new List<Product>();

        public ProductViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            CreateSearchBar();
        }

        public override void ViewWillAppear(bool animated)
        {
            products = FilterProducts();
            filteredData.AddRange(products);
            UpdateCollection();
        }

        private void CreateSearchBar()
        {
            var searchBar = new UISearchBar()
            {
                Placeholder = "Search for Products"
            };
            searchBar.ShowsCancelButton = true;
            NavigationItem.TitleView = searchBar;
            searchBar.Delegate = new SearchDelegate(this);
        }

        public void NavigateToDetails(Product product)
        {
            var productDetailViewController = Storyboard.InstantiateViewController("ProductDetailViewController") as ProductDetailViewController;
            productDetailViewController.product = product;
            this.NavigationController.PushViewController(productDetailViewController, true);
        }

        private void UpdateCollection()
        {
            productCollectionView.Source = new ProductCollectionViewSource(this, filteredData);
            productCollectionView.ReloadData();
        }

        private List<Product> FilterProducts()
        {
            var filteredProduct = new List<Product>();
            var service = new ProductService();
            var productList = service.getData();
            var selectedProducts = productList.Where(product => product.category_id == category);
            foreach (var items in selectedProducts)
            {
                filteredProduct.Add(items);
            }
            return filteredProduct;
        }

        private void HideKeyboard()
        {
            // Dismiss the keyboard if taps anywhere in the view.
            var gesture = new UITapGestureRecognizer(() =>
              View.EndEditing(true));
            View.AddGestureRecognizer(gesture);
        }

        public void Search(UISearchBar searchBar)
        {
            Console.WriteLine("Seach button clicked!");
            filteredData.Clear();

            if (searchBar.Text == "")
                filteredData.AddRange(products);
            else
            {
                foreach (var data in products)
                {
                    if (data.name.ToLower().Contains(searchBar.Text.ToLower()))
                    {
                        filteredData.Add(data);
                    }
                }
            }
            UpdateCollection();
        }
    }
}
