// This file has been autogenerated from a class added in the UI designer.

using System;
using Foundation;
using UIKit;
using System.Collections.Generic;
using KountDataCollector;
using System.Linq;
using Xamarin_Sample_App.Controllers.Home;

namespace Xamarin_Sample_App.Home
{  
	public partial class HomeViewController : KountAnalyticsViewController
	{
        List<CategoryModel> filteredData = new List<CategoryModel>();
        List<CategoryModel> categortList = new List<CategoryModel>();
        AppDelegate appDelegate = (AppDelegate)UIApplication.SharedApplication.Delegate;

        public HomeViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            NavigationItem.SetHidesBackButton(true, animated: true);
            CreateSearchBar();
        }

        public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);            
            GetCategoryData();
            UpdateCategoryCollection();
            SetBadge();
        }

        private void CreateSearchBar()
        {
            var searchBar = new UISearchBar()
            {
                Placeholder = "Search for Category"
            };
            searchBar.ShowsCancelButton = true;
            NavigationItem.TitleView = searchBar;
            searchBar.Delegate = new SearchDelegate(this);
            searchBar.Delegate = this;
        }

        public void NavigateToProducts(string categoryID)
        {
            var productViewController = Storyboard.InstantiateViewController("ProductViewController") as ProductViewController;
            productViewController.category = categoryID;
            this.NavigationController.PushViewController(productViewController, true);
        }

        private void GetCategoryData()
        {
            var service = new CategoryService();
            categortList = service.getData();
            filteredData.Clear();
            filteredData.AddRange(categortList);
        }

        private void HideKeyboard()
        {
            // Dismiss the keyboard if taps anywhere in the view.
            var gesture = new UITapGestureRecognizer(() =>
              View.EndEditing(true));
            View.AddGestureRecognizer(gesture);
        }

        private void UpdateCategoryCollection()
        {
            collectionView.Source = new CategoryCollectionViewSource(this, filteredData);
            collectionView.ReloadData();
        }

        public void Search(UISearchBar searchBar)
        {
            filteredData.Clear();

            if (searchBar.Text == "")
                filteredData.AddRange(categortList);
            else
            {
                foreach (var data in categortList)
                {
                    if (data.categoryLabel.ToLower().Contains(searchBar.Text.ToLower()))
                    {                      
                        filteredData.Add(data);
                    }
                }
            }
            UpdateCategoryCollection();
        }

        public void SetBadge()
        {
            var count = appDelegate.cartList.Count;
            var tabItems = TabBarController.TabBar.Items;
            {
                var tabItem = tabItems[1];
                if (count > 0)
                    tabItem.BadgeValue = count.ToString();
                else
                    tabItem.BadgeValue = null;
            }
        }

    } 
}


